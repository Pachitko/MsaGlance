version: '3.4'

volumes:
  disk_data_protection_keys:
    name: disk_data_protection_keys
  idsrv_data_protection_keys:
    name: idsrv_data_protection_keys
  idsrv_db:
    name: idsrv_db
    external: false

networks:
  main_net:
    driver: bridge

services:
  idsrv_db:
    image: postgres:14.3
    container_name: idsrv_db
    ports:
      - "2345:5432"
    volumes:
      - idsrv_db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: "idsrv"
      POSTGRES_USER: "puser"
      POSTGRES_PASSWORD: "12qwasZX"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U puser -d idsrv" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - main_net
  webapi:
    container_name: webapi
    image: webapi:dev
    build:
      context: ${SERVICES}Web/Web.Api
      target: debug
    ports:
      - "5002:80"
    networks:
      - main_net
    volumes:
      - ${SERVICES}Web/Web.Api:/src
  disk:
    container_name: disk
    image: disk:dev
    build:
      context: ${SERVICES}Disk/Disk.Api
      target: debug
    ports:
      - "5001:80"
    networks:
      - main_net
    volumes:
      - disk_data_protection_keys:/root/.aspnet/DataProtection-Keys:rw
      - ${SERVICES}Disk/Disk.Api:/src
  idsrv:
    container_name: idsrv
    image: idsrv:dev
    build:
      context: ${SERVICES}Identity/Identity.Api
      target: debug
    ports:
      - "5000:80"
      - "5443:443"
    networks:
      - main_net
    volumes:
      - ./certs/:/https/
      - idsrv_data_protection_keys:/root/.aspnet/DataProtection-Keys:rw
      - ${SERVICES}Identity/Identity.Api:/src
